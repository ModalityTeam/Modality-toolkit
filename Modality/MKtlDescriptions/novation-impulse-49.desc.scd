/**** desc file generated by MIDIExplorer.

This is a desc file for the Novation Impulse 49. The desc files for Novation Impulse 25 and Novation Impulse 61 will be similar with fewer or more elements.

The pads in Basic MIDI control work as midinotes with touch, but you can configure the pads as controls instead. This device description assumes that the pads are configured as controls.
The only issue with that is that it overlaps with the sustain pedal input then, so this one is not configured in this description file.

It is assumed that MIDI channel 1 is being used, but the device can send out on any of the 16 midichannels.

This desc was tested with a Cascha foot pedal, which gives a range of 0 to 46 on the expression pedal, and this is used as the spec for the pedal.


Example code:

MKtl.find;
m = MKtl('impulse', "novation-impulse-49", multiIndex: 1);
MKtl('impulse').gui


****/

(
deviceName: "Impulse",
protocol: 'midi',
deviceType: 'midiKeyboard',
elementTypes: [ \slider, \pad, \knob, \button, \pianoKey, \touch, \bender, \modWheel ],
status: (
	linux: "tested and working, 2021_01_17, nescivi",
	osx: "unknown",
	win: "unknown"
),
idInfo: "Impulse",

// hardwarePages: [1, 2, 3, 4],

deviceInfo: (
	vendorURI: 'https://novationmusic.com/en/keys/impulse',
// manualURI: 'http://company.com/products/this/manual.pdf',
	// description: ,
	features: [
		"49-key velocity-sensitive keyboard",
		"Pitch bend and mod wheel",
		"Aftertouch",
		"Program change",
		"Expression pedal",
		"Sustain pedal",
		"9 faders",
		"9 buttons",
		"8 knobs",
		"6 transport buttons"
	],
	notes: "Pads in basic MIDI control work as midinotes with touch, you can configure the pads as controls instead, but then they overlap with the sustain pedal. The device description assumes that the pads are configured as controls. Tested with a Cascha foot pedal, which gives a range of 0 to 46 on the expression pedal.",
	// hasScribble: false
	longName: "Novation Impulse 49"
),
elementsDesc: (
	shared: ('midiChan': 0),
	elements: [
		(
			key: \sl,
			elements: (41..49).collect { |iii,i| // sliders
				(
					\midiMsgType: \cc, \elementType: \slider, \spec: \midiCC,
					\midiNum: iii,
					\style: ( \row: 0, \column: i + 2, height: 2 )
				)
			},
		),
		(
			key: \bt,
			elements: (51..59).collect { |iii,i| // button row under sliders
				(
					\midiMsgType: \cc, \elementType: \button, \spec: \midiCC,
					\midiNum: iii,
					\style: ( \row: 2, \column: i + 2 ), \buttonMode: \toggle
				)
			},
		),
		(
			key: \kn,
			elements: [ (21..24), (25..28) ].collect{ |jt,j| jt.collect{ |iii,i| // knobs
				(
					\midiMsgType: \cc, \elementType: \knob, \spec: \midiCC,
					\midiNum: iii,
					\style: ( \row: j, \column: i + 15 )
				)
			}}.flatten,
		),
		(
			key: 'pch',
			'midiMsgType': 'program', 'elementType': 'program',
			'spec': 'midiProgram', style: (row: 2, column: 11 )
		),
		(
			key: \tr,
			shared: (\midiMsgType: \cc, \elementType: \button,
				\spec: \midiBut, \mode: \push ),
			elements: [
				(key: \rew,  \midiNum: 112, style: (\row: 2, column:13, \showLabel: true )),
				(key: \fwd,  \midiNum: 113, style: (\row: 2, column:14, \showLabel: true )),
				(key: \stop, \midiNum: 114, style: (\row: 2, column:15, \showLabel: true )),
				(key: \play, \midiNum: 115, style: (\row: 2, column:16, \showLabel: true )),
				(key: \loop, \midiNum: 116, style: (\row: 2, column:17, \showLabel: true )),
				(key: \rec,  \midiNum: 117, style: (\row: 2, column:18, \showLabel: true ))
			]
		),
		(
			key: \pd, // pads configured in the device as cc instead of notes
			elements: [ [67, 69, 71, 72], [60, 62, 64, 65 ] ].collect{ |jt,j| jt.collect{ |iii,i| // pads
				(
					\midiMsgType: \cc, \elementType: \pad, \spec: \midiCC,
					\midiNum: iii,
					\style: ( \row: j, \column: i + 19 )
				)
			}}.flatten,
		),
		(
			key: \pkey, // keyboard
			shared: ('elementType': 'pianoKey', groupType: \noteOnOff, spec: \midiVel),
			elements: [ (85..120), (36..84), (0..35) ].collect{ |oct,j|
				oct.collect { |midinum, i|
					var pos = Piano.pos(midinum, oct.first);
					(
						key: midinum.asSymbol,
						shared: (
							midiNum: midinum,
							groupType: \noteOnOff,
							style: (
								row:    3 + (j*2) + (pos.y * 0.9),
								column: 2 + (pos.x * 0.8) + [7*0.8+0.3,0,0].at(j),
								color:  pos.color,
								height: 1.2,
								showLabel: false
							)
						)
					);
				}
			}.flatten
		),
		(
			key: 'mod',
			'midiMsgType': 'cc', 'elementType': 'modWheel', 'midiNum': 1,
			'spec': 'midiCC', style: (row: 3, column: 1, height: 2)
		),
		(
			key: 'bend',
			'midiMsgType': 'bend', 'elementType': 'bender',
			'spec': 'midiBend', style: (row: 3, column: 0, height: 2)
		),
		(
			key: 'touch',
			'midiMsgType': 'touch', 'elementType': 'pad',
			'spec': 'midiTouch', style: (row: 5, column: 0, width: 2, height: 2)
		),
		(
			key: 'exp',
			'midiMsgType': 'cc', 'elementType': 'pad', 'midiNum': 11,
			'spec': [0,46].asSpec, style: (row: 7, column: 0, width: 2, height: 2)
		)
	]
)

);

